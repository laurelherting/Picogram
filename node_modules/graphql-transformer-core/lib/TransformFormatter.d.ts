import TransformerContext from "./TransformerContext";
import { StackRules } from './util/splitStack';
import { DeploymentResources } from './DeploymentResources';
interface TransformFormatterOptions {
    stackRules: StackRules;
}
export declare class TransformFormatter {
    private opts;
    private schemaResourceUtil;
    constructor(opts: TransformFormatterOptions);
    /**
     * Formats the ctx into a set of deployment resources.
     * @param ctx the transformer context.
     * Returns all the deployment resources for the transformation.
     */
    format(ctx: TransformerContext): DeploymentResources;
    /**
     * Schema helper to pull resources from the context and output the final schema resource.
     */
    private buildSchema;
    /**
     * Builds the schema and creates the schema record to pull from S3.
     * Returns the schema SDL text as a string.
     */
    private buildAndSetSchema;
    private collectResolversFunctionsAndSchema;
    private replaceResolverRecord;
}
export {};
